{"version":3,"sources":["components/diaryTile/DiaryTile.module.css","components/buttons/AppButtons.module.css","pages/home/Home.module.css","app/App.module.css","components/entryTile/EntryTile.module.css","pages/auth/Auth.module.css","images/mobileDiary.svg","components/buttons/GreenButton.ts","components/loginForm/LoginForm.tsx","components/signUpForm/SignUpForm.tsx","pages/auth/authSlice.ts","pages/auth/userSlice.ts","services/request.ts","utils.ts","pages/userHome/diarySlice.ts","pages/userHome/entrySlice.ts","app/appSlice.ts","store/parentReducer.ts","store/store.ts","pages/auth/Auth.tsx","services/mirage/mirageServer.ts","pages/userHome/UserHome.tsx","components/buttons/AppButtons.tsx","components/entryInput/EntryInput.tsx","components/diaryTile/DiaryTile.tsx","pages/userHome/UserDiaries.tsx","components/entryTile/EntryTile.tsx","pages/userHome/DiaryEntries.tsx","pages/home/Home.tsx","app/App.tsx","services/mirage/routes/user.ts","services/mirage/routes/diary.ts","index.tsx","pages/userHome/UserHome.module.css","components/entryInput/EntryInput.module.css"],"names":["module","exports","withStyles","theme","root","color","palette","getContrastText","purple","backgroundColor","green","width","Button","useStyles","makeStyles","createStyles","margin","spacing","textField","container","display","flexDirection","alignItems","minWidth","borderRadius","seperator","border","formInitialValue","userName","password","LoginForm","setCridentails","classes","React","useState","showPassword","values","setValues","handleClickShowPassword","fromSchema","Yup","required","min","className","Typography","variant","component","gutterBottom","initialValues","validationSchema","onSubmit","setSubmitting","formik","Grid","item","TextField","name","label","type","clsx","onClick","fontSize","disabled","isSubmitting","confirmPassword","email","optional","SignUpForm","showConfirmPassword","prop","Fragment","validate","value","errors","EmailRounded","undefined","authSlice","createSlice","initialState","isAuthenticated","reducers","authenticateUser","state","payload","token","unAuthenticateUser","actions","userSlice","setUser","unSetUser","request","axios","create","baseURL","defaults","headers","post","interceptors","response","use","a","status","data","error","showAlert","message","Promise","reject","titleText","alertType","Swal","fire","position","timer","timerProgressBar","toast","showConfirmButton","showCancelButton","cancelButtonText","icon","showClass","popup","backdrop","hideClass","findObjectInArray","objArray","searchValue","searchField","index","object","find","obj","indexOf","diarySlice","diaryList","addDiary","push","updateDiary","diaryId","id","updateDiaries","removeDiaries","entrySlice","entryList","addEntry","updateEntry","entryId","updateEntries","removeEntries","sliceState","isLessThan1080","window","innerWidth","isLessThan420","appSlice","setLessThan1080","setLessThan420","checkWindowWidth","app","parentReducer","combineReducers","appReducer","user","userReducer","auth","authReducer","diaries","diariesReducer","entries","entriesReducer","store","configureStore","reducer","useAppDispatch","useDispatch","TabPanel","props","children","other","role","hidden","aria-labelledby","Box","p","a11yProps","env","background","paper","Auth","authUrlId","useParams","navigate","useNavigate","dispatch","useSelector","useEffect","tabNo","action","toLocaleLowerCase","setValue","GreenTabs","borderBottom","indicator","Tabs","GreenTab","selected","Tab","style","AppBar","onChange","event","newValue","indicatorColor","textColor","aria-label","disableRipple","then","catch","console","log","avatar","UserHome","isLess1080","userId","get","anchorEl","setAnchorEl","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","MenuItem","userHome","navBar","visibility","IconButton","currentTarget","Avatar","toUpperCase","mainbody","BorderBtn","bd","r_arrow","title","borderBtn","arrowRight","FilledBtn","filledBtn","EntryInput","visible","content","canEdit","onCancel","onSave","_canEdit","_setCanEdit","_title","_setTitle","_content","_setContent","backDrop","mainBody","e","target","placeholder","titleEdit","contentEdit","buttons","Close","Save","Edit","DiaryTile","entryIds","updatedAt","createdAt","isEntryOpen","setEntryOpen","noOfEntry","length","editDirayTitle","mixin","input","confirmButtonText","confirmButtonColor","progressSteps","queue","inputValue","put","diary","entry","diaryTile","lockIcon","toLowerCase","LockOpenOutlined","LockOutlined","editBtn","UserDiaries","createDiary","inputOptions","private","public","diaryEntryContainer","addBtn","map","idx","key","EntryTile","entryTitle","setEntryTitle","entryContent","setEntryContent","entryTile","viewBtn","DiaryEntries","to","Home","isLess420","home","size","GreenButton","homeBody","src","require","alt","App","addEventListener","path","element","login","schema","req","JSON","parse","requestBody","users","findBy","errorResponse","attrs","signUp","randomBytes","toString","getDiaries","params","userid","getEntries","diaryid","exuser","now","Date","split","slice","join","createEntry","update","entryid","Response","isError","Server","environment","models","Model","extend","hasMany","belongsTo","factories","Factory","seeds","server","routes","this","urlPrefix","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.59fb3d45.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"diaryTile\":\"DiaryTile_diaryTile__2JUPR\",\"editBtn\":\"DiaryTile_editBtn__21nL6\",\"lockIcon\":\"DiaryTile_lockIcon__psmT1\",\"buttons\":\"DiaryTile_buttons__1Vqvd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"borderBtn\":\"AppButtons_borderBtn__Aa9Xu\",\"arrowRight\":\"AppButtons_arrowRight__3WeVs\",\"moveRight\":\"AppButtons_moveRight__1yHdo\",\"filledBtn\":\"AppButtons_filledBtn__1Jazb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__z5d0-\",\"navBar\":\"Home_navBar__3jtRp\",\"homeBody\":\"Home_homeBody__1fw5d\",\"moveUpDown\":\"Home_moveUpDown__1bYHE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2BhYg\",\"auth\":\"App_auth__1MW9Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"entryTile\":\"EntryTile_entryTile__34E6J\",\"viewBtn\":\"EntryTile_viewBtn__26ns3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"Auth_auth__2BHIT\"};","module.exports = __webpack_public_path__ + \"static/media/mobileDiary.2884a5e2.svg\";","import { Theme, withStyles } from '@material-ui/core/styles';\r\nimport { Button } from '@material-ui/core';\r\nimport { green, purple } from '@material-ui/core/colors';\r\n\r\n\r\nexport default withStyles((theme: Theme) => ({\r\n    root: {\r\n      color: theme.palette.getContrastText(purple[500]),\r\n    //   fontWeight: 'bold',\r\n    //   fontSize: 'large',\r\n      backgroundColor: green[500],\r\n      width: '100%',\r\n      '&:hover': {\r\n        backgroundColor: green[700],\r\n      },\r\n    },\r\n  }))(Button);","import React, { FC } from 'react';\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport LockRounded from '@material-ui/icons/LockRounded';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport clsx from 'clsx';\r\n// import Button from '@material-ui/core/Button';\r\n// import { green } from '@material-ui/core/colors';\r\nimport { Formik, Form, Field, FormikHelpers } from 'formik';\r\nimport { TextField } from 'formik-material-ui';\r\nimport { Typography, Grid,} from '@material-ui/core';\r\nimport ColorButton from '../../components/buttons/GreenButton';\r\n// import TextField from '@material-ui/core/TextField';\r\nimport * as Yup from 'yup';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        margin: {\r\n            margin: theme.spacing(1),\r\n        },\r\n        textField: {\r\n            width: '25ch',\r\n        },\r\n        container: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            minWidth: '287px',\r\n            borderRadius: '10px',\r\n            backgroundColor: 'rgba(255,255,255,1)',\r\n        },\r\n        seperator: {\r\n            width: '80%',\r\n            border: '2px solid green',\r\n            backgroundColor: 'green',\r\n        }\r\n    }),\r\n);\r\n\r\ninterface State {\r\n    // password: string;\r\n    showPassword: boolean;\r\n}\r\ninterface FormValues {\r\n    userName: string;\r\n    password: string\r\n}\r\n\r\nconst formInitialValue:FormValues = {\r\n    userName: 'superuser',\r\n    password: '12345678',\r\n}\r\n\r\n\r\nconst LoginForm: FC<{setCridentails?:(val:FormValues)=>void}> = ({setCridentails}) => {\r\n    const classes = useStyles();\r\n\r\n    const [values, setValues] = React.useState<State>({\r\n        // password: '',\r\n        showPassword: false,\r\n    });\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({ ...values, showPassword: !values.showPassword });\r\n    };\r\n    // const handleChange = (prop: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    //     setValues({ ...values, [prop]: event.target.value });\r\n    //   };\r\n\r\n    const onSubmit = (values:FormValues, { setSubmitting }:FormikHelpers<FormValues>):void => {\r\n        setSubmitting(false)\r\n        if (setCridentails) setCridentails(values)\r\n    }\r\n\r\n    const fromSchema = Yup.object<FormValues>({\r\n            userName: Yup.string()\r\n                .required(\"User name is required\"),\r\n            password: Yup.string()\r\n                .required('Password is required')\r\n                .min(8, \"Atleast 8 characters\"),\r\n        })\r\n\r\n    return (\r\n            <div  className={classes.container} >\r\n                <Typography variant='h4' component={'div'} display=\"block\" gutterBottom >Login</Typography>\r\n                <hr className={classes.seperator} />\r\n                <Formik initialValues={formInitialValue} validationSchema={ fromSchema } onSubmit={onSubmit} >\r\n                    {(formik) => (\r\n                        <Form >\r\n                            <div className={classes.margin}>\r\n                                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                                    <Grid item> <AccountCircle /> </Grid>\r\n                                    <Grid item>\r\n                                        <Field required component={TextField} name=\"userName\" label=\"User Name\" type='text' />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </div>\r\n\r\n                            <div className={clsx(classes.margin)} >\r\n                                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                                    <Grid item> <LockRounded /></Grid>\r\n                                    <Grid item>\r\n                                        <Field required component={TextField} label=\"Password\" name=\"password\" \r\n                                            type={values.showPassword ? 'text' : 'password'}  />\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <div onClick={handleClickShowPassword} >\r\n                                            {values.showPassword ? <Visibility fontSize=\"small\" /> : <VisibilityOff fontSize=\"small\" />}\r\n                                        </div>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </div>\r\n                            <br />\r\n                            <ColorButton className={clsx(classes.margin)} variant=\"contained\" color=\"primary\" type='submit' disabled={formik.isSubmitting} > Login </ColorButton>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","import React, { FC } from 'react';\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\nimport {AccountCircle, EmailRounded} from '@material-ui/icons';\r\nimport LockRounded from '@material-ui/icons/LockRounded';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport clsx from 'clsx';\r\nimport { Typography, Grid,} from '@material-ui/core';\r\nimport { Formik, Form, Field, FormikHelpers } from 'formik';\r\nimport ColorButton from '../../components/buttons/GreenButton';\r\nimport { TextField } from 'formik-material-ui';\r\nimport * as Yup from 'yup';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        margin: {\r\n            margin: theme.spacing(1),\r\n        },\r\n        textField: {\r\n            width: '25ch',\r\n        },\r\n        container: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            minWidth: '287px',\r\n            borderRadius: '10px',\r\n            backgroundColor: 'rgba(255,255,255,1)',\r\n        },\r\n        seperator: {\r\n            width: '80%',\r\n            border: '2px solid green',\r\n            backgroundColor: 'green',\r\n\r\n        }\r\n\r\n    }),\r\n);\r\n\r\ninterface State {\r\n    password: string;\r\n    showPassword: boolean;\r\n    confirmPassword: string;\r\n    showConfirmPassword: boolean;\r\n}\r\ninterface FormValues {\r\n    userName: string;\r\n    password: string;\r\n    confirmPassword: string;\r\n    email?: string;\r\n}\r\n\r\nconst formInitialValue: FormValues = {\r\n    userName: '', password: '', confirmPassword: '', email: '',\r\n}\r\nconst fromSchema = Yup.object<FormValues>({\r\n    userName: Yup.string()\r\n        .required(\"User name is required\"),\r\n    password: Yup.string()\r\n        .required('Password is required')\r\n        .min(8, \"Atleast 8 characters\"),\r\n    confirmPassword: Yup.string()\r\n        .required('Password is required')\r\n        .min(8, \"Atleast 8 characters\"),\r\n    email: Yup.string().optional().email('Incorrect Email format'),\r\n})\r\n\r\nconst SignUpForm: FC<{setCridentails?:(val:FormValues)=>void}> = ({setCridentails})=>{\r\n    const classes = useStyles();\r\n\r\n    const [values, setValues] = React.useState<State>({\r\n        password: '',\r\n        showPassword: false,\r\n        confirmPassword: '',\r\n        showConfirmPassword: false,\r\n    });\r\n\r\n    const handleClickShowPassword = (prop: keyof State) => () => {\r\n        setValues({ ...values, [prop]: !values[prop] });\r\n    };\r\n    const handleValidateForm = (value: FormValues) => {\r\n        const errors: Partial<FormValues> = {}\r\n        if (value.password !== value.confirmPassword) {\r\n            errors.confirmPassword = \"Password not matched\"\r\n        }\r\n        return errors\r\n    }\r\n    const onSubmit = (values: FormValues, { setSubmitting }: FormikHelpers<FormValues>): void => {\r\n        setSubmitting(false)\r\n        if (setCridentails) setCridentails(values)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment >\r\n            <div className={classes.container} >\r\n                <Typography variant='h4' component={'div'} gutterBottom >Sign Up</Typography>\r\n\r\n                <hr className={classes.seperator} />\r\n\r\n                <Formik initialValues={formInitialValue} validate={handleValidateForm} validationSchema={fromSchema} onSubmit={onSubmit} >\r\n                    {(formik) => (\r\n                        <Form >\r\n                            <div className={classes.margin}>\r\n                                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                                    <Grid item>\r\n                                        <AccountCircle />\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Field required component={TextField} name=\"userName\" label=\"User Name\" type='text' />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </div>\r\n\r\n                            <div className={clsx(classes.margin)} >\r\n                                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                                    <Grid item> <LockRounded /></Grid>\r\n                                    <Grid item>\r\n                                        <Field required component={TextField} name=\"password\" label=\"Password\" type={values.showPassword ? 'text' : 'password'} />\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <div onClick={handleClickShowPassword('showPassword')} >\r\n                                            {values.showPassword ? <Visibility fontSize=\"small\" /> : <VisibilityOff fontSize=\"small\" />}\r\n                                        </div>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </div>\r\n                            <div className={clsx(classes.margin)} >\r\n                                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                                    <Grid item> <LockRounded /></Grid>\r\n                                    <Grid item>\r\n                                        <Field required component={TextField} name=\"confirmPassword\" label=\"Confrim Password\" type={values.showConfirmPassword ? 'text' : 'password'} />\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <div onClick={handleClickShowPassword('showConfirmPassword')} >\r\n                                            {values.showConfirmPassword ? <Visibility fontSize=\"small\" /> : <VisibilityOff fontSize=\"small\" />}\r\n                                        </div>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </div>\r\n\r\n                            <div className={classes.margin}>\r\n                                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                                    <Grid item>\r\n                                        <EmailRounded />\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Field component={TextField} name=\"email\" label=\"Email (optional)\" type='text' />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </div>\r\n                            <br />\r\n                            <ColorButton onClick={undefined} className={clsx(classes.margin)} variant=\"contained\" color=\"primary\" type='submit' disabled={formik.isSubmitting} > Sign UP </ColorButton>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default SignUpForm;","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\r\n\r\nconst sliceState:{token?:string, isAuthenticated:boolean} = {isAuthenticated: false }\r\n\r\nexport const authSlice = createSlice({\r\n    name:'auth',\r\n    initialState: sliceState,\r\n    reducers: {\r\n        authenticateUser: (state, {payload}:PayloadAction<string>)=>{\r\n            state.token = payload\r\n            state.isAuthenticated = true\r\n        },\r\n        unAuthenticateUser: (state)=>{\r\n            state.token = undefined\r\n            state.isAuthenticated = false\r\n        },\r\n    }\r\n})\r\n\r\nexport const {authenticateUser, unAuthenticateUser } = authSlice.actions;\r\n\r\nexport default authSlice.reducer;","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { User } from '../../interfaces/user.interface';\r\n\r\n// let sliceState:User|null = null\r\n\r\nexport const userSlice = createSlice({\r\n    name: 'user',\r\n    initialState: null as User | null,\r\n    reducers: {\r\n        setUser: (state, { payload }: PayloadAction<User>) => {\r\n            return (state = payload);\r\n        },\r\n        unSetUser: (state) => {\r\n            return (state = null);\r\n        },\r\n    }\r\n})\r\n\r\nexport const { setUser, unSetUser } = userSlice.actions;\r\n\r\nexport default userSlice.reducer;","import axios, { AxiosInstance, AxiosResponse, AxiosError } from 'axios';\r\nimport { showAlert } from '../utils';\r\n\r\nconst request: AxiosInstance = axios.create({\r\n  baseURL: 'https://mydiary.app',\r\n});\r\n\r\nrequest.defaults.headers.post['Content-Type'] = 'application/json';\r\n\r\nrequest.interceptors.response.use(\r\n  async (response: AxiosResponse): Promise<any> => {\r\n    if (response.status >= 200 && response.status < 300) {\r\n      return response.data;\r\n    }\r\n  },\r\n  (error: AxiosError) => {\r\n    const {\r\n      response,\r\n      request,\r\n    }: { response?: AxiosResponse; request?: XMLHttpRequest } = error;\r\n    if (response) {\r\n      if (response.status >= 400 && response.status < 500) {\r\n        showAlert(response.data?.data?.message, 'error');\r\n        return null;\r\n      }\r\n    } else if (request) {\r\n      showAlert('Request failed. Please try again.', 'error');\r\n      return null;\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default request;\r\n","import Swal, { SweetAlertIcon } from 'sweetalert2';\r\nimport request from './services/request';\r\n\r\nexport const showAlert = (\r\n  titleText = 'Something happened.',\r\n  alertType?: SweetAlertIcon\r\n): void => {\r\n  Swal.fire({\r\n    titleText,\r\n    position: 'top-end',\r\n    timer: 3000,\r\n    timerProgressBar: true,\r\n    toast: true,\r\n    showConfirmButton: false,\r\n    showCancelButton: true,\r\n    cancelButtonText: 'Dismiss',\r\n    icon: alertType,\r\n    showClass: {\r\n      popup: 'swal2-noanimation',\r\n      backdrop: 'swal2-noanimation',\r\n    },\r\n    hideClass: {\r\n      popup: '',\r\n      backdrop: '',\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchDataFromServerAndLog = ()=>{\r\n  request.post<any, any>('/auth/login', { userName:'superuser', password:'12345678' },)\r\n      .then(data => { console.log(data.user);})\r\n      .catch(error => console.log(error))\r\n\r\n  request.get<any, any>(`/diaries/${1}`)\r\n      .then(data => { console.log(data)})\r\n      .catch(error => console.log(error))\r\n  \r\n      request.get<any, any>(`/diaries/entries/${1}`)\r\n      .then(data => { console.log(data)})\r\n      .catch(error => console.log(error))\r\n} \r\n\r\nexport type Merge<A, B> = {\r\n  [K in keyof A]: K extends keyof B ? B[K] : A[K]\r\n} & B\r\n\r\nexport function findObjectInArray<ArrayT, ObjectIdT>(objArray: ArrayT[], searchValue: ObjectIdT, searchField: string):number|undefined {\r\n  let index: number|undefined;\r\n  const object = objArray.find((obj:any) => obj[`${searchField}`] === searchValue);\r\n  if (object){\r\n      index = objArray.indexOf(object)\r\n  }\r\n  return index\r\n}","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { Diary } from '../../interfaces/diary.interface';\r\nimport {findObjectInArray} from '../../utils';\r\n\r\nconst sliceState: { diaryList: Diary[] } = { diaryList: [] }\r\n\r\nexport const diarySlice = createSlice({\r\n    name: 'auth',\r\n    initialState: sliceState,\r\n    reducers: {\r\n        addDiary: (state, { payload }: PayloadAction<Diary>) => {\r\n            state.diaryList.push(payload)\r\n        },\r\n        updateDiary: (state, { payload }: PayloadAction<Diary>) => {\r\n            const diaryId = findObjectInArray(state.diaryList, payload.id, 'id' )\r\n            if (diaryId!==undefined){\r\n                state.diaryList[diaryId] = payload\r\n            }\r\n        },\r\n        updateDiaries: (state, { payload }: PayloadAction<Diary[]>) => {\r\n            state.diaryList = payload\r\n        },\r\n        removeDiaries: (state) => {\r\n            state.diaryList = []\r\n        },\r\n    }\r\n})\r\n\r\nexport const { updateDiaries, removeDiaries, addDiary, updateDiary } = diarySlice.actions;\r\n\r\nexport default diarySlice.reducer;","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { Entry } from '../../interfaces/entry.interface';\r\nimport {findObjectInArray} from '../../utils';\r\n\r\nconst sliceState: { entryList: Entry[] } = { entryList: [] }\r\n\r\nexport const entrySlice = createSlice({\r\n    name: 'auth',\r\n    initialState: sliceState,\r\n    reducers: {\r\n        addEntry: (state, { payload }: PayloadAction<Entry>) => {\r\n            state.entryList.push(payload);\r\n        },\r\n        updateEntry: (state, { payload }: PayloadAction<Entry>) => {\r\n            const entryId = findObjectInArray(state.entryList, payload.id, 'id' )\r\n            if (entryId!==undefined){\r\n                state.entryList[entryId] = payload\r\n            }\r\n        },\r\n        updateEntries: (state, { payload }: PayloadAction<Entry[]>) => {\r\n            state.entryList = payload\r\n        },\r\n        removeEntries: (state ) => {\r\n            state.entryList = []\r\n        },\r\n    }\r\n})\r\n\r\nexport const { updateEntries, removeEntries, addEntry, updateEntry } = entrySlice.actions;\r\n\r\nexport default entrySlice.reducer;","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport {RootStateType} from '../store/parentReducer';\r\n\r\ntype StateType = {\r\n    isLessThan1080: boolean,\r\n    isLessThan420: boolean,\r\n}\r\nconst sliceState: StateType = { isLessThan1080: window.innerWidth <= 1080, isLessThan420: window.innerWidth <= 420 }\r\n\r\nconst appSlice = createSlice({\r\n    name: 'app',\r\n    initialState: sliceState,\r\n    reducers: {\r\n        setLessThan1080: (state, { payload }: PayloadAction<boolean>) => {\r\n            state.isLessThan1080 = payload\r\n        },\r\n        setLessThan420: (state, { payload }: PayloadAction<boolean>) => {\r\n            state.isLessThan420 = payload\r\n        },\r\n        checkWindowWidth: (state)=>{\r\n            const {isLessThan1080, isLessThan420} = state\r\n            if (window.innerWidth <= 1080 && !isLessThan1080){\r\n                state.isLessThan1080 = true \r\n            }\r\n            else if (window.innerWidth <= 420 && !isLessThan420){\r\n                state.isLessThan420 = true \r\n            }\r\n            else if (window.innerWidth >= 420 && isLessThan420){\r\n                state.isLessThan420 = false \r\n            }\r\n            else if( (window.innerWidth >= 1080 && isLessThan1080) ){\r\n                state.isLessThan1080 = false \r\n            }\r\n        }\r\n    }\r\n})\r\n\r\nexport const { setLessThan1080, setLessThan420, checkWindowWidth } = appSlice.actions;\r\nexport const isLessThan1080 = (state:RootStateType)=> state.app.isLessThan1080;\r\nexport const isLessThan420 = (state:RootStateType)=> state.app.isLessThan420 ;\r\n\r\nexport default appSlice.reducer;","import { combineReducers } from '@reduxjs/toolkit';\r\nimport userReducer from '../pages/auth/userSlice';\r\nimport authReducer from '../pages/auth/authSlice';\r\nimport diariesReducer from '../pages/userHome/diarySlice';\r\nimport entriesReducer from '../pages/userHome/entrySlice';\r\nimport appReducer from '../app/appSlice';\r\n\r\nconst parentReducer = combineReducers({\r\n    app: appReducer,\r\n    user: userReducer,\r\n    auth: authReducer,\r\n    diaries: diariesReducer,\r\n    entries: entriesReducer,\r\n})\r\n\r\nexport type RootStateType = ReturnType<typeof parentReducer>\r\n\r\nexport default parentReducer;","import {configureStore} from '@reduxjs/toolkit';\r\nimport parentReducer from './parentReducer';\r\nimport {useDispatch} from 'react-redux';\r\n\r\nconst store = configureStore({\r\n    reducer: parentReducer,\r\n})\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\n\r\nexport default store","import React, { FC, useEffect } from 'react';\r\nimport style from './Auth.module.css';\r\nimport { LoginForm, SignUpForm } from '../../components';\r\n// import SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, Theme, withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n// import { green } from '@material-ui/core/colors';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useParams } from \"react-router\";\r\nimport { authenticateUser } from './authSlice';\r\nimport { setUser } from './userSlice';\r\nimport { useAppDispatch } from '../../store/store'; \r\nimport request from '../../services/request';\r\nimport { User } from '../../interfaces/user.interface';\r\nimport {AuthResponse} from '../../services/mirage/routes/user';\r\nimport { useSelector } from 'react-redux';\r\nimport {RootStateType} from '../../store/parentReducer';\r\n\r\ninterface TabPanelProps {\r\n    children?: React.ReactNode;\r\n    dir?: string;\r\n    index: any;\r\n    value: any;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n    const { children, value, index, ...other } = props;\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography component={'div'}>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction a11yProps(index: any) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n}));\r\n\r\n/////////////////////////////////////////////////// COMPONENT /////////////////////////////////////////////////////\r\n\r\nconst Auth: FC = () => {\r\n\r\n    const classes = useStyles();\r\n    const authUrlId = useParams();\r\n    const navigate = useNavigate();\r\n    const dispatch = useAppDispatch();\r\n    const isAuthenticated = useSelector((state:RootStateType)=>state.auth.isAuthenticated)\r\n    const userName = useSelector((state:RootStateType)=>state.user?.userName)\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    const login = ({ userName, password }: { userName: string, password: string }) => {\r\n        request.post<User, AuthResponse>('/auth/login', { userName, password },)\r\n            .then(data => { \r\n            // console.log(data.user); \r\n            dispatch(authenticateUser(data.token));\r\n            dispatch(setUser(data.user));\r\n        })\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n    const signup = ({ userName, password, email }: { userName: string, password: string, email?: string }) => {\r\n        request.post<User, AuthResponse>('/auth/signup', { userName, password, email },)\r\n            .then(data => {\r\n                dispatch(authenticateUser(data.token));\r\n                dispatch(setUser(data.user));\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n/////////////////////////////////////////////////////////////\r\n    const callBack = ()=>{\r\n        if (isAuthenticated && userName){\r\n            navigate(`/${userName}`);\r\n        }\r\n    }\r\n    useEffect(callBack, [userName])\r\n/////////////////////////////////////////////////////////////\r\n    let tabNo: 0 | 1 = 0;\r\n    if (authUrlId.action.toLocaleLowerCase() === 'login') {\r\n        tabNo = 0;\r\n    } else if (authUrlId.action.toLocaleLowerCase() === 'signup') {\r\n        tabNo = 1\r\n    }\r\n    const [value, setValue] = React.useState<number>(tabNo);\r\n\r\n    const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n        setValue(newValue);\r\n    };\r\n///////////////////////////////////////////////////////////////\r\n    const GreenTabs = withStyles((theme: Theme) => ({\r\n        root: {\r\n            color: 'green',\r\n            borderBottom: '1px solid green',\r\n        },\r\n        indicator: {\r\n            backgroundColor: 'green',\r\n        },\r\n    }))(Tabs);\r\n    const GreenTab = withStyles(() => ({\r\n        root: {\r\n            // color: 'green',\r\n            '&$selected': {\r\n                color: 'green',\r\n            },\r\n        },\r\n        selected: {},\r\n    }))(Tab);\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    return (\r\n        <div className={`${style.auth}`}>\r\n            <div className={classes.root}>\r\n                <AppBar position=\"static\" color=\"default\">\r\n                    <GreenTabs\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        variant=\"fullWidth\"\r\n                        aria-label=\"full width tabs example\"\r\n                    >\r\n                        <GreenTab disableRipple label=\"Login\" onClick={() => { navigate(`/auth/login`) }} {...a11yProps(0)} />\r\n                        <GreenTab disableRipple label=\"Sign Up\" onClick={() => { navigate(`/auth/signup`) }} {...a11yProps(1)} />\r\n                    </GreenTabs>\r\n                </AppBar>\r\n                <TabPanel value={value} index={0} >\r\n                    <LoginForm setCridentails={login} />\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1} >\r\n                    <SignUpForm setCridentails={signup} />\r\n                </TabPanel>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Auth;","import { Server, Model, Factory, Response, hasMany, belongsTo } from 'miragejs';\r\nimport * as user from './routes/user';\r\nimport * as diary from './routes/diary';\r\nimport { randomBytes } from 'crypto';\r\n\r\nexport const errorResponse = (error: any, message = 'request error') => {\r\n    console.log(\"ERROR\", error)\r\n    return new Response(400, undefined, {\r\n        data: {\r\n            message,\r\n            isError: true\r\n        }\r\n    })\r\n}\r\n\r\nexport const runServer = (env?: string): Server => {\r\n    return new Server({\r\n        environment: env || 'development',\r\n\r\n        models: {\r\n            user: Model.extend({\r\n                diary: hasMany(),\r\n            }),\r\n            diary: Model.extend({\r\n                user: belongsTo(),\r\n                entry: hasMany(),\r\n            }),\r\n            entry: Model.extend({\r\n                diary: belongsTo(),\r\n            }),\r\n        },\r\n\r\n        factories: {\r\n            user: Factory.extend({\r\n                userName: 'superuser',\r\n                password: '12345678',\r\n                email: 'superuser@gmail.com',\r\n                token() { return randomBytes(8).toString('hex') },\r\n            }),\r\n            diary: Factory.extend({\r\n                type: 'Public',\r\n                userId: '1',\r\n                title: 'Open Source',\r\n                entryIds: [],\r\n                createdAt: new Date().toString().split(' ').slice(0,5).join(' '),\r\n                updatedAt: new Date().toString().split(' ').slice(0,5).join(' ')\r\n            }),\r\n            \r\n            entry: Factory.extend({\r\n                diaryId: '1',\r\n                title: 'My Code',\r\n                content: 'This is my code',\r\n            })\r\n        },\r\n\r\n        seeds: (server): any => {\r\n            server.create('user');\r\n            server.create<any,any,any>('diary');\r\n            server.create<any,any,any>('diary', {title:\"My codes\", type:'Private'});\r\n        },\r\n\r\n        routes() {\r\n            this.urlPrefix = 'http://mydiary.app';\r\n            // this.namespace = \"/app\"\r\n\r\n            this.get('/diaries/:userid', diary.getDiaries );\r\n            this.get('/diaries/entries/:diaryid', diary.getEntries );\r\n            // this.get('/getdiaries', (_:any, req:any):any =>{\r\n                \r\n            //     return _.diaries.all()\r\n            // });\r\n\r\n            this.post('/auth/login', user.login);\r\n            this.post('/auth/signup', user.signUp);\r\n            this.post('/diaries/:userid', diary.createDiary);\r\n            this.post('/diaries/entries/:diaryid', diary.addEntry);\r\n\r\n            this.put('/diaries/:diaryid', diary.updateDiary);\r\n            this.put('/diaries/entries/:entryid', diary.updateEntry);\r\n        }\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// fetch('http://mydiary.app/auth/login', {\r\n//     method: 'POST',\r\n//     headers: {\r\n//         'Accept': 'application/json',\r\n//         'Content-Type': 'application/json',\r\n//         token: 'sdfsdfsdf',\r\n//       },\r\n//     body: JSON.stringify({ username: 'superuser', password: '123' })\r\n// })\r\n//     .then(res => res.json).then(data => { console.log(data) })\r\n//     .catch((error) => {\r\n//         console.log(\"Error\", error)\r\n//     })","import React, { FC, useEffect } from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { Avatar, Menu, MenuItem, IconButton } from '@material-ui/core';\r\nimport style from './UserHome.module.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { isLessThan1080 } from '../../app/appSlice';\r\nimport request from '../../services/request';\r\nimport { RootStateType } from '../../store/parentReducer';\r\nimport { updateDiaries } from './diarySlice';\r\nimport {unSetUser} from '../auth/userSlice';\r\nimport {unAuthenticateUser} from '../auth/authSlice';\r\nimport { useAppDispatch } from '../../store/store';\r\nimport { Diary } from '../../interfaces/diary.interface';\r\nimport { useNavigate } from \"react-router-dom\";\r\n// import {fetchDataFromServerAndLog} from '../../utils';\r\n// import UserDiaries from './UserDiaries';\r\n// import UserDiaries from './UserDiaries';\r\n// import DiaryEntries from './DiaryEntries';\r\nimport { Outlet } from 'react-router';\r\n// import { useParams } from \"react-router\";\r\n// import { Routes, Route } from 'react-router';\r\n// import { Na } from \"react-router-dom\";\r\n// import { NavBar } from '../../components';\r\n// import GreenTextField from '../../components/TextFields/GreenTextField';\r\n// import DiaryTile from '../../components/diaryTile/DiaryTile';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        margin: {\r\n            margin: theme.spacing(1),\r\n        },\r\n        avatar: {\r\n            backgroundColor: 'green',\r\n        },\r\n    },\r\n    ));\r\n\r\n/////////////////////////////////////////////////// COMPONENT /////////////////////////////////////////////////////\r\nconst UserHome: FC = () => {\r\n    const classes = useStyles();\r\n    const isLess1080 = useSelector(isLessThan1080);\r\n    const dispatch = useAppDispatch();\r\n    const navigate = useNavigate();\r\n    const userId = useSelector((state: RootStateType) => state.user?.id);\r\n    const userName = useSelector((state: RootStateType) => state.user?.userName);\r\n    const isAuthenticated = useSelector((state: RootStateType) => state.auth.isAuthenticated);\r\n    // const [isDrawerOpen, setDrawerOpen] = useState<boolean>(false);\r\n    // console.log(username);\r\n    const logout = ()=>{\r\n        dispatch(unSetUser())\r\n        dispatch(unAuthenticateUser())\r\n    }\r\n\r\n    const callBack = () => {\r\n        if (!isAuthenticated) {\r\n            navigate(`/`)\r\n        }\r\n        if (isAuthenticated && userId) {\r\n            request.get<{}, { diaries: Diary[] }>(`/diaries/${userId}`)\r\n                .then(data => { dispatch(updateDiaries(data.diaries)); })\r\n                .catch(error => console.log(error))\r\n        }\r\n        // fetchDataFromServerAndLog();\r\n    }\r\n    useEffect(callBack, [isAuthenticated, userId])\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n    const menuId = 'primary-search-account-menu';\r\n    const renderMenu = (\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        id={menuId}\r\n        keepMounted\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleMenuClose}\r\n      >\r\n        <MenuItem onClick={logout}>Logout</MenuItem>\r\n      </Menu>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <div className={`${style.userHome}`}>\r\n                <div className={`${style.navBar}`}>\r\n                    <div style={{ visibility: isLess1080 ? 'visible' : 'hidden' }} > </div>\r\n                    <div><h1>Diary App</h1></div>\r\n                    <div><IconButton onClick={handleClick} ><Avatar aria-label=\"user-name\" className={classes.avatar} > {userName ? userName[0].toUpperCase() : 'U'} </Avatar></IconButton></div>\r\n                </div>\r\n                <div className={`${style.mainbody}`}>\r\n                    <Outlet />\r\n                </div>\r\n            </div>\r\n            {renderMenu}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default UserHome;","import React, { FC, ReactNode } from 'react';\r\nimport style from './AppButtons.module.css';\r\n\r\ntype BorderBtn={children:ReactNode, title?:string, color?:string, bd?:string, r_arrow?:boolean, onClick?:()=>void}\r\nexport const BorderBtn: FC<BorderBtn> = ({children, color='green', bd='green', r_arrow=false, onClick, title })=>{\r\n    return(\r\n        <button title={title}  className={`${style.borderBtn}`} style={{color:color, border:`2px solid ${bd}`}} onClick={onClick} >\r\n            {children} {!r_arrow || <span className={`${style.arrowRight}`}>➔</span>}\r\n        </button>\r\n    )\r\n}\r\ntype FilledBtn={children:ReactNode, title?:string, color?:string, onClick?:()=>void}\r\nexport const FilledBtn: FC<FilledBtn> = ({children, color='white', onClick, title})=>{\r\n    return(\r\n        <button title={title} className={`${style.filledBtn}`} style={{color:color}} onClick={onClick} >\r\n            {children}\r\n        </button>\r\n    )\r\n}","import React, { FC, useState, useEffect } from 'react';\r\nimport style from './EntryInput.module.css';\r\nimport { FilledBtn, BorderBtn } from '../buttons/AppButtons';\r\nimport Markdown from 'markdown-to-jsx';\r\nimport { Edit, Close, Save } from '@material-ui/icons';\r\n// import {RootStateType} from '../../store/parentReducer';\r\n// import { useSelector } from 'react-redux';\r\n// import { onCancel } from './entryInputSlice';\r\ntype PropType = {\r\n    visible: boolean;\r\n    onSave?: (title: string, content: string) => void;\r\n    onCancel?: () => void;\r\n    canEdit?: boolean;\r\n    title?: string;\r\n    content?: string;\r\n}\r\n\r\nconst EntryInput: FC<PropType> = ({ visible, title = '', content = '', canEdit=true, onCancel, onSave }) => {\r\n    // const {canEdit, title, content, visible, onSave} = useSelector((state:RootStateType)=> state.entryInput);\r\n    const [_canEdit, _setCanEdit] = useState<boolean>(canEdit);\r\n    const [_title, _setTitle] = useState<string>(title);\r\n    const [_content, _setContent] = useState<string>(content);\r\n\r\n    const afterRender = ()=>{\r\n        _setCanEdit(canEdit);\r\n        _setTitle(title);\r\n        _setContent(content);\r\n    }\r\n    useEffect(afterRender,[])\r\n\r\n    const handleSubmit = () => {\r\n        if (!_title && !_content) return\r\n\r\n        !onSave || onSave(_title, _content)\r\n        !onCancel || onCancel();\r\n        _setTitle(''); _setContent('') // resetting the input fields\r\n    }\r\n\r\n    return (\r\n        <div className={`${style.backDrop}`} style={{ display: visible ? undefined : 'none' }} >\r\n            <div className={`${style.mainBody}`}  >\r\n                {_canEdit ?\r\n                    <input value={_title} onChange={(e) => { _setTitle(e.target.value) }} type=\"text\" placeholder='Title' name='entry title' className={`${style.titleEdit}`} /> :\r\n                    <h1 className={`${style.title}`} >{_title}</h1>\r\n                }\r\n\r\n                <hr className={`${style.seperator}`} />\r\n\r\n                {_canEdit ?\r\n                    <textarea value={_content} onChange={(e) => { _setContent(e.target.value) }} className={`${style.contentEdit}`} placeholder='Content, Markdown support...' name='entry content' /> :\r\n                    <div className={`${style.content}`}><Markdown>{_content}</Markdown></div>\r\n                }\r\n\r\n                <div className={`${style.buttons}`}>\r\n                    <div><BorderBtn onClick={onCancel} color='white' bd='white' ><Close fontSize='small' />cancel</BorderBtn></div>\r\n                    {_canEdit ?\r\n                        <div><FilledBtn onClick={handleSubmit} ><Save fontSize='small' /> save</FilledBtn></div>:\r\n                        <div><FilledBtn onClick={()=>{_setCanEdit(true)}} > <Edit fontSize='small' /> Edit</FilledBtn></div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EntryInput;\r\n// {/* <GreenButton color=\"primary\" variant=\"contained\" className={classes.margin} >Save</GreenButton> */}\r\n// {/* <div className={`${style.backDrop}`}></div> */}\r\n// {/* <Backdrop className={classes.backdrop} open={true} ></Backdrop> */}\r\n// { visible, onSave, onCancel, canEdit = true, title = '', content = '' }","import React, { FC, useState } from 'react';\r\nimport { Diary } from '../../interfaces/diary.interface';\r\nimport { LockOutlined, LockOpenOutlined, Edit } from '@material-ui/icons';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { BorderBtn, FilledBtn } from '../../components/buttons/AppButtons';\r\nimport style from './DiaryTile.module.css';\r\nimport { useNavigate } from 'react-router';\r\nimport { RootStateType } from '../../store/parentReducer';\r\nimport { useSelector } from 'react-redux';\r\nimport request from '../../services/request';\r\nimport { showAlert } from '../../utils';\r\nimport { useAppDispatch } from '../../store/store';\r\nimport { addEntry } from '../../pages/userHome/entrySlice';\r\nimport { updateDiary } from '../../pages/userHome/diarySlice';\r\nimport { Entry } from '../../interfaces/entry.interface';\r\nimport EntryInput from '../../components/entryInput/EntryInput';\r\nimport Swal from 'sweetalert2';\r\n// import {addNewEntry} from '../../components/entryInput/entryInputSlice';\r\n// import {} from '../../pages/auth/userSlice';\r\n\r\nconst DiaryTile: FC<Diary> = ({ id, entryIds, title, updatedAt, createdAt, type }) => {\r\n    const userName = useSelector((state: RootStateType) => state.user?.userName);\r\n    const [isEntryOpen, setEntryOpen] = useState<boolean>(false);\r\n    const navigate = useNavigate();\r\n    const handleViweAll = () => { navigate(`/${userName}/diary/${id}`) }\r\n    const noOfEntry = entryIds?.length || 0;\r\n    const dispatch = useAppDispatch();\r\n\r\n    const onEntrySave = (title: string, content: string,) => {\r\n        request.post<{ title: string, content: string, diaryId: string }, { diary: Diary, entry: Entry }>(`/diaries/entries/${id}`,\r\n            { title, content, diaryId: id })\r\n            .then(({ diary, entry }) => {\r\n                dispatch(updateDiary(diary));\r\n                dispatch(addEntry(entry));\r\n                return showAlert('Entry added', 'success');\r\n            }).catch(error => console.log(error));\r\n    }\r\n\r\n    const editDirayTitle = async () => {\r\n        const { value } = await Swal.mixin({\r\n            input: 'text',\r\n            confirmButtonText: 'Save 🖫',\r\n            confirmButtonColor: \"rgb(0, 170, 0)\",\r\n            showCancelButton: true,\r\n            progressSteps: ['1'],\r\n        }).queue<{ value: string[] }>([\r\n            {\r\n                titleText: 'Diary title',\r\n                input: 'text',\r\n                inputValue: title,\r\n            },\r\n        ]);\r\n        if (value && value[0]) {\r\n            await request.put<{ title: string }, Diary>(`/diaries/${id}`, { title: value[0] })\r\n                .then(diary => {\r\n                    dispatch(updateDiary(diary));\r\n                    return showAlert('Diary Title Updated', 'success');\r\n                })\r\n                .catch(error => console.log(error));\r\n            return\r\n        }\r\n        Swal.fire({\r\n            titleText: 'Cancelled',\r\n            confirmButtonColor: \"rgb(170, 0, 0)\",\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!isEntryOpen || <EntryInput visible={isEntryOpen} onCancel={() => { setEntryOpen(false) }} onSave={onEntrySave} />}\r\n            <div className={`${style.diaryTile}`} >\r\n                <div><h1>{title}</h1></div>\r\n                <div>{noOfEntry} {noOfEntry < 2 ? \"entry\" : \"entries\"} saved</div>\r\n                <div><span>Created at:</span> {createdAt}</div>\r\n                <div><span>Updated at:</span> {updatedAt}</div>\r\n                <div className={`${style.lockIcon}`} style={{ color: type?.toLowerCase() === 'public' ? 'green' : 'brown' }} > {type?.toLowerCase() === 'public' ? <LockOpenOutlined /> : <LockOutlined />}<span>{type}</span> </div>\r\n                <div className={`${style.buttons}`} >\r\n                    <div><FilledBtn onClick={() => { setEntryOpen(true) }} >add entry</FilledBtn></div>\r\n                    <div><BorderBtn title=\"view all entries\" r_arrow={true} onClick={handleViweAll} >view all </BorderBtn></div>\r\n                </div>\r\n                <div className={`${style.editBtn}`} ><IconButton onClick={editDirayTitle} title='edit title' color=\"inherit\" ><Edit fontSize='small' /></IconButton></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DiaryTile;\r\n\r\n// {/* <Avatar aria-label=\"user-name\" className={classes.avatar} > R </Avatar> */ }","import React, { FC } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootStateType } from '../../store/parentReducer';\r\nimport DiaryTile from '../../components/diaryTile/DiaryTile';\r\nimport { Diary } from '../../interfaces/diary.interface';\r\nimport { User } from '../../interfaces/user.interface';\r\nimport Swal from 'sweetalert2';\r\nimport request from '../../services/request';\r\nimport { useAppDispatch } from '../../store/store';\r\nimport {addDiary} from './diarySlice';\r\nimport {setUser} from '../auth/userSlice';\r\n// import {showAlert} from '../../utils';\r\n// import { Entry } from '../../interfaces/entry.interface';\r\n// import { Entry } from '../../interfaces/entry.interface';\r\n// import {diarySlice} from './diarySlice';\r\n// import GreenButton from '../../components/buttons/GreenButton';\r\nimport style from './UserHome.module.css';\r\n\r\nconst UserDiaries: FC = () => {\r\n    const diaryList = useSelector((state: RootStateType) => state.diaries.diaryList);\r\n    const userId = useSelector((state: RootStateType) => state.user?.id);\r\n    const dispatch = useAppDispatch();\r\n\r\n    const createDiary = async () => {\r\n        const {value} = await Swal.mixin({\r\n            input: 'text',\r\n            confirmButtonText: 'Next &rarr;',\r\n            confirmButtonColor: \"rgb(0, 170, 0)\",\r\n            showCancelButton: true,\r\n            progressSteps: ['1', '2'],\r\n        }).queue<{ value: string[] }>([\r\n            {\r\n                titleText: 'Diary title',\r\n                input: 'text',\r\n            },\r\n            {\r\n                titleText: 'Private or public diary?',\r\n                input: 'radio',\r\n                inputOptions: {\r\n                    private: 'Private',\r\n                    public: 'Public',\r\n                },\r\n                inputValue: 'private',\r\n            },\r\n        ]);\r\n\r\n        if ( value && value[0] && value[1]) {\r\n            await request.post<{title:string,type:string,userId:string},{user:User,diary:Diary}>(`/diaries/${userId}`,{\r\n                title: value[0],\r\n                type: value[1],\r\n                userId\r\n            }).then(({diary, user})=>{\r\n                dispatch(addDiary(diary))\r\n                dispatch(setUser(user))\r\n            }).catch(error =>{ console.log(error) } )\r\n            \r\n            return Swal.fire({\r\n                titleText: 'New Diary Created',\r\n                confirmButtonText: 'OK!',\r\n                confirmButtonColor: \"rgb(0, 170, 0)\",\r\n              });\r\n        }\r\n        Swal.fire({\r\n            titleText: 'Cancelled',\r\n            confirmButtonColor: \"rgb(170, 0, 0)\",\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className={`${style.diaryEntryContainer}`} >\r\n            <div><h1>Diaries</h1></div>\r\n            <div ><button title='create diary' onClick={createDiary} className={`${style.addBtn}`} >+</button></div>\r\n            {/* <div><DiaryTile id='1' title='My diary' updatedAt='1:00 pm' createdAt='12:00 Am' type='Public' /></div> */}\r\n            {/* <div><DiaryTile id='1' title='My diary' updatedAt='1:00 pm' createdAt='12:00 Am' type='Public' /></div> */}\r\n            {diaryList.map((diary, idx: number) => (\r\n                <div key={idx}><DiaryTile  {...diary} /></div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n// {id, title, updatedAt, createAt,type}\r\nexport default UserDiaries;","import React, { FC, useState } from 'react';\r\n// import { Diary } from '../../interfaces/diary.interface';\r\nimport { Entry } from '../../interfaces/entry.interface';\r\nimport style from './EntryTile.module.css';\r\nimport request from '../../services/request';\r\nimport { useAppDispatch } from '../../store/store';\r\nimport { updateEntry } from '../../pages/userHome/entrySlice';\r\nimport { showAlert } from '../../utils';\r\n// import { updateDiary } from '../../pages/userHome/diarySlice';\r\n// import { Merge } from '../../utils';\r\nimport { Visibility } from '@material-ui/icons';\r\nimport { IconButton } from '@material-ui/core';\r\n// import Swal from 'sweetalert2';\r\nimport EntryInput from '../../components/entryInput/EntryInput';\r\n// import { LockOutlined, LockOpenOutlined } from '@material-ui/icons'\r\n// import { BorderBtn, FilledBtn } from '../../components/buttons/AppButtons';\r\n\r\n// type EventTypes = {\r\n//     onClick?: () => void,\r\n// }\r\n// type PropType = Merge<Entry, EventTypes>\r\n\r\nconst EntryTile: FC<Partial<Entry>> = ({ id, title, content, createdAt, updatedAt }) => {\r\n\r\n    const [isEntryOpen, setEntryOpen] = useState<boolean>(false);\r\n    const [entryTitle, setEntryTitle] = useState<string>('');\r\n    const [entryContent, setEntryContent] = useState<string>('');\r\n    const handleOnView = () => { setEntryOpen(true); setEntryTitle(title || ''); setEntryContent(content || \"\") }\r\n    const dispatch = useAppDispatch();\r\n\r\n    const onEntrySave = (title: string, content: string,) => {\r\n        request.put<{ title: string, content: string }, Entry>(`/diaries/entries/${id}`,\r\n            { title, content })\r\n            .then((entry) => {\r\n                dispatch(updateEntry(entry));\r\n                return showAlert('Entry Updated', 'success');\r\n            }).catch(error => console.log(error));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={`${style.entryTile}`} title='view entry' >\r\n                <div><h2>{title}</h2></div>\r\n                <div><span>Created at:</span> {createdAt}</div>\r\n                <div><span>Updated at:</span> {updatedAt}</div>\r\n                <div><p>{content}</p></div>\r\n                <div className={`${style.viewBtn}`} ><IconButton onClick={handleOnView} title='view entry' color=\"inherit\" ><Visibility /></IconButton></div>\r\n                {!isEntryOpen || <EntryInput visible={isEntryOpen} canEdit={false} onCancel={() => { setEntryOpen(false) }} onSave={onEntrySave} title={entryTitle} content={entryContent} />}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EntryTile;\r\n","import React, { FC, useState, useEffect } from 'react';\r\nimport { useParams } from \"react-router\";\r\nimport { useSelector } from 'react-redux';\r\nimport { RootStateType } from '../../store/parentReducer';\r\nimport EntryTile from '../../components/entryTile/EntryTile';\r\nimport { useAppDispatch } from '../../store/store';\r\nimport { updateEntries, addEntry } from './entrySlice';\r\nimport { updateDiary } from './diarySlice';\r\nimport { Diary } from '../../interfaces/diary.interface';\r\nimport { Entry } from '../../interfaces/entry.interface';\r\nimport request from '../../services/request';\r\nimport style from './UserHome.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport EntryInput from '../../components/entryInput/EntryInput';\r\n// import Swal from 'sweetalert2';\r\n// import DiaryTile from '../../components/diaryTile/DiaryTile';\r\n\r\nconst DiaryEntries: FC = () => {\r\n    const entryList = useSelector((state: RootStateType) => state.entries.entryList);\r\n    const userName = useSelector((state: RootStateType) => state.user?.userName);\r\n    const [isEntryOpen, setEntryOpen] = useState<boolean>(false);\r\n    // const [entryTitle, setEntryTitle] = useState<string>('');\r\n    // const [entryContent, setEntryContent] = useState<string>('');\r\n    // const [canEditEntry, setCanEditEntry] = useState<boolean>(false)\r\n    const dispatch = useAppDispatch();\r\n    const { diaryId } = useParams();\r\n    // const [canEdit, setCanEdit] = useState<boolean>(true);\r\n\r\n    const onEntrySave = (title:string, content:string,)=>{\r\n        request.post<{title:string, content:string, diaryId:string}, {diary:Diary, entry:Entry}>(`/diaries/entries/${diaryId}`,\r\n        {title, content, diaryId})\r\n        .then(({diary,entry})=> {\r\n            dispatch(updateDiary(diary));\r\n            dispatch(addEntry(entry));\r\n        }).catch(error=> console.log(error));\r\n    }\r\n\r\n    const afterRender = () => {\r\n        request.get<{}, { entries: Entry[] }>(`/diaries/entries/${diaryId}`)\r\n            .then(data => { dispatch(updateEntries(data.entries)) })\r\n            .catch(error => { console.log(error) });\r\n    }\r\n    useEffect(afterRender, [])\r\n\r\n    return (\r\n        <>\r\n            {!isEntryOpen || <EntryInput visible={isEntryOpen} onCancel={() => { setEntryOpen(false) }} onSave={onEntrySave} />}\r\n            <div className={`${style.diaryEntryContainer}`} >\r\n                <div><h1><Link to={`/${userName}`}>⮜ Diaries</Link> \\ Entries</h1></div>\r\n                <div ><button title='add entry' onClick={()=>{setEntryOpen(true)}} className={`${style.addBtn}`} >+</button></div>\r\n                {\r\n                    entryList.map(({id, title, content, updatedAt, createdAt }, idx) => (\r\n                        <EntryTile\r\n                            key={idx}\r\n                            id={id}\r\n                            title={title}\r\n                            content={content}\r\n                            updatedAt={updatedAt}\r\n                            createdAt={createdAt}\r\n                            // onClick={()=>{ setEntryOpen(true); setEntryTitle(title); setEntryContent(content)}}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DiaryEntries;\r\n\r\n// {/* <EntryTile\r\n//     key={idx}\r\n//     title={\"My first Code\"}\r\n//     content={'hello this is my first for arduino uno R3 in a bootcamp of robotics hello this is my first for arduino uno R3 in a bootcamp of robotics hello this is my first for arduino uno R3 in a bootcamp of robotics'}\r\n//     updatedAt='4:00pm'\r\n//     createdAt='5:00am'\r\n// /> */}","import React, { FC } from 'react';\r\nimport style from './Home.module.css';\r\nimport { Button } from '@material-ui/core';\r\n// import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\n// import { ListRounded } from '@material-ui/icons'\r\nimport GreenButton from '../../components/buttons/GreenButton';\r\nimport { useSelector } from 'react-redux';\r\nimport { isLessThan420 } from '../../app/appSlice';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Home: FC = () => {\r\n\r\n    const isLess420 = useSelector(isLessThan420);\r\n    const navigate = useNavigate();\r\n  return (\r\n        <div className={`${style.home}`} >\r\n            <div className={`${style.navBar}`}>\r\n                <div > </div>\r\n                <div><h1>Diary App</h1></div>\r\n                <div> \r\n                    <Button variant=\"outlined\" size={isLess420? 'small':undefined } onClick={()=>{navigate(`/auth/login`)}}  >Login</Button>\r\n                    <hr/>\r\n                    <div><GreenButton size={isLess420? 'small':undefined } onClick={()=>{navigate(`/auth/signup`)}} >Sign Up</GreenButton></div>\r\n                </div>\r\n            </div>\r\n            <div className={`${style.homeBody}`} >\r\n                <div>\r\n                    <h1 >Digitize Your Routine, Thoughts And Memories</h1>\r\n                </div>\r\n                <div > </div>\r\n                <div><img src={require('../../images/mobileDiary.svg')} alt=\"bookspile\"/></div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Home;","import React, { FC, useEffect } from 'react';\nimport style from './App.module.css';\nimport Auth from '../pages/auth/Auth';\nimport UserHome from '../pages/userHome/UserHome';\nimport UserDiaries from '../pages/userHome/UserDiaries';\nimport DiaryEntries from '../pages/userHome/DiaryEntries';\nimport Home from '../pages/home/Home';\nimport { useAppDispatch } from '../store/store';\n// import { useSelector } from 'react-redux';\nimport { checkWindowWidth } from './appSlice';\nimport { Routes, Route, Outlet } from 'react-router';\n\n/////////////////////////////////////////////////// COMPONENT /////////////////////////////////////////////////////\n\nconst App: FC = () => {\n\n  const dispatch = useAppDispatch()\n\n  const checkWindowWidthCallBack = () => {\n    window.addEventListener('resize', () => {\n      dispatch(checkWindowWidth())\n    })\n  }\n  useEffect(checkWindowWidthCallBack, [])\n\n  return (\n    <>\n      <div className={`${style.app}`} >\n        <Routes>\n          <Route path='/' element={<Home />} />\n          <Route path='/auth' element={<div className={`${style.auth}`} ><Outlet /></div>}>\n            <Route path=':action' element={<Auth />} />\n          </Route>\n          <Route path=':username' element={<UserHome />} >\n            <Route path='/' element={<UserDiaries />} />\n            <Route path='/diary' element={<div  ><Outlet /></div>}>\n              <Route path=':diaryId' element={<DiaryEntries />} />\n            </Route>\n          </Route>\n          <Route path='*' element={<div><h1>Page Not Found</h1></div>} />\n        </Routes>\n      </div>\n    </>\n  )\n}\n\nexport default App;","import { Response, Request } from 'miragejs';\r\nimport { errorResponse } from '../mirageServer';\r\nimport { User } from '../../../interfaces/user.interface';\r\nimport { randomBytes } from 'crypto';\r\n\r\nexport interface AuthResponse {user:User,token:string}\r\n\r\nexport const login = (schema: any, req: Request): AuthResponse | Response => {\r\n    // console.log('HEADER',req.requestHeaders)\r\n    const { userName, password } = JSON.parse(req.requestBody);\r\n    // console.log(schema.users.findBy({ username }));\r\n    const user = schema.users.findBy({ userName });\r\n    if (!user) {\r\n        return errorResponse(null, 'No user with this username is available')\r\n    }\r\n    if (password !== user.password) {\r\n        return errorResponse(null, 'Incorrect Password')\r\n    }\r\n    return {\r\n        user: user.attrs as User,\r\n        token: user.token\r\n    };\r\n}\r\n\r\nexport const signUp = (schema: any, req: Request): AuthResponse | Response => {\r\n    // console.log(req.requestHeaders)\r\n    const data = JSON.parse(req.requestBody);\r\n    const exUser = schema.users.findBy({ userName: data.userName });\r\n    if (exUser) {\r\n        return errorResponse(null, 'The user name is already taken')\r\n    }\r\n    const user = schema.users.create({...data, token: randomBytes(8).toString('hex')} );\r\n    // user.createDiary({userId: '2', type:'Private'})\r\n    return {\r\n        user: user.attrs as User,\r\n        token: user.token\r\n    };\r\n}\r\n\r\nexport { }","import { Response, Request } from 'miragejs';\r\nimport { errorResponse } from '../mirageServer';\r\nimport { Diary } from '../../../interfaces/diary.interface';\r\nimport { Entry } from '../../../interfaces/entry.interface';\r\nimport { User } from '../../../interfaces/user.interface';\r\n\r\nexport const getDiaries = (schema: any, req: Request): Diary[] | Response => {\r\n    try {\r\n        const userId = req.params.userid\r\n        const exuser = schema.users.findBy({ id: userId });\r\n        return exuser.diary as Diary[]\r\n    } catch{\r\n        return errorResponse(null, 'Could not get user diaries');\r\n    }\r\n};\r\nexport const getEntries = (schema: any, req: Request): Entry[] | Response => {\r\n    try {\r\n        const diaryId = req.params.diaryid;\r\n        const diary = schema.diaries.findBy({ id: diaryId });\r\n        return diary.entry as Entry[];\r\n    } catch{\r\n        return errorResponse(null, 'Could not get diary enteries');\r\n    }\r\n};\r\n\r\n\r\nexport const createDiary = (schema: any, req: Request): { user: User, diary: Diary } | Response => {\r\n    try {\r\n        const { title, type, userId } = JSON.parse(req.requestBody) as Partial<Diary>;\r\n        const exuser = schema.users.findBy({ id: userId })\r\n        const now = new Date().toString().split(' ').slice(0,5).join(' ');\r\n        const diary = exuser.createDiary({\r\n            title,\r\n            type,\r\n            createdAt:now,\r\n            updatedAt:now,\r\n        })\r\n        return {\r\n            user: { ...exuser.attrs },\r\n            diary: { ...diary.attrs },\r\n        }\r\n    } catch{\r\n        return errorResponse(null, 'Could not create a diary for the user')\r\n    }\r\n}\r\nexport const addEntry = (schema: any, req: Request): { diary: Diary, entry:Entry } | Response => {\r\n    try {\r\n        const {title, content, diaryId} = JSON.parse(req.requestBody);\r\n        const diary = schema.diaries.findBy({id:diaryId})\r\n        const now = new Date().toString().split(' ').slice(0,5).join(' ');\r\n        const entry = diary.createEntry({\r\n            title,\r\n            content,\r\n            createdAt:now,\r\n            updatedAt:now,\r\n        })\r\n        return {\r\n            diary: {...diary.attrs },\r\n            entry: {...entry.attrs },\r\n        }\r\n    } catch{\r\n        return errorResponse(null, 'Could not create an entry for the diary')\r\n    }\r\n}\r\n\r\n\r\nexport const updateDiary = (schema: any, req: Request): Diary | Response => {\r\n    try {\r\n        const { diaryid } = req.params;\r\n        const now = new Date().toString().split(' ').slice(0,5).join(' ');\r\n        const data = JSON.parse(req.requestBody) as Partial<Diary>;\r\n        const diary = schema.diaries.findBy({ id: diaryid });\r\n        diary.update({ ...data, updatedAt:now, })\r\n        return diary.attrs as Diary\r\n    } catch{\r\n        return errorResponse(null, 'Could not update the diary')\r\n    }\r\n}\r\nexport const updateEntry = (schema: any, req: Request): Entry | Response => {\r\n    try {\r\n        const { entryid } = req.params;\r\n        const now = new Date().toString().split(' ').slice(0,5).join(' ');\r\n        const data = JSON.parse(req.requestBody) as Partial<Entry>;\r\n        const entry = schema.entries.findBy({ id: entryid });\r\n        entry.update({ ...data, updatedAt:now, });\r\n        return entry.attrs as Entry\r\n    } catch{\r\n        return errorResponse(null, 'Could not update the entry');\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport store from './store/store';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport {runServer} from './services/mirage/mirageServer';\n\nrunServer();\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userHome\":\"UserHome_userHome__33c0t\",\"navBar\":\"UserHome_navBar__QZX8a\",\"mainbody\":\"UserHome_mainbody__IFJ-i\",\"title\":\"UserHome_title__1j4Ig\",\"seperator\":\"UserHome_seperator__1fdg9\",\"content\":\"UserHome_content__way9l\",\"addBtn\":\"UserHome_addBtn__1cdNs\",\"diaryEntryContainer\":\"UserHome_diaryEntryContainer__3wZ9F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backDrop\":\"EntryInput_backDrop__2ahHr\",\"mainBody\":\"EntryInput_mainBody__2ZWBa\",\"buttons\":\"EntryInput_buttons__JiifR\",\"titleEdit\":\"EntryInput_titleEdit__3SMGj\",\"seperator\":\"EntryInput_seperator__1UMM4\",\"contentEdit\":\"EntryInput_contentEdit__zQu0e\",\"title\":\"EntryInput_title__1Cie-\",\"content\":\"EntryInput_content__3bOgP\"};"],"sourceRoot":""}